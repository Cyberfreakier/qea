package qea.benchmark.rovers.mop;

ResourceLifecycleMOP(Object r) {

       event request after(Object r) :  
       	execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.request(Object)) && args(r){}
       
       event deny after(Object r) :  
       	execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.deny(Object)) && args(r){}
       
       event grant after(Object r) :  
       	execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.grant_rl(Object)) && args(r){}
       
       event cancel after(Object r) :  
       	execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.cancel_rl(Object)) && args(r){}
       
       event rescind after(Object r) :  
       	execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.rescind(Object)) && args(r){}

       fsm:
       start [
        request -> requested
       ]
       requested [
       	grant -> granted
		deny -> start
       ]
       granted [
		rescind -> granted
		cancel -> start
       ]

       @fail{
               System.err.println("A resource was used incorrectly");
               System.exit(0);
       }
}
