package benchmark.rovers.mop;


NestedCommandMOP(Object x, Object y) {

       Object saved_x;
       Object saved_y;
       String last_event = "";

       event com_x after(Object x) :  execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.command(Object)) && args(x){saved_x=x;last_event="com_x";}
       event suc_x after(Object x) :  execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.succeed(Object)) && args(x){last_event="suc_x";}
       event com_y after(Object y) :  execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.command(Object)) && args(y){saved_y=y;last_event="com_y";}
       event suc_y after(Object y) :  execution(void benchmark.rovers.mop.MopDoEval$MopDoWork.succeed(Object)) && args(y){last_event="suc_y";}

       fsm:
       start [
        com_x -> xcom
        com_y -> ycom
       ]
       xcom [
	com_y -> xycom
	suc_x -> start
       ]
       ycom [
        com_x -> yxcom
	suc_y -> start
       ]
       xycom [
        suc_y -> xcom
       ]
       yxcom [
        suc_x -> ycom
       ]

       @fail{
         if(saved_x!=saved_y) System.err.println("error in NestedCommand with "+saved_x+" and "+saved_y+" on "+last_event);
       }
}
